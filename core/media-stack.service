[Unit]
Description=Media Stack with Podman Compose
Documentation=https://github.com/yourusername/media-stack
Wants=network-online.target
After=network-online.target default.target
RequiresMountsFor=%h

[Service]
Type=forking
RemainAfterExit=yes
WorkingDirectory=/home/haint/media-stack
ExecStart=/home/haint/media-stack/scripts/podman-systemd-wrapper.sh
ExecStop=/home/haint/media-stack/scripts/podman-down.sh
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
TimeoutStartSec=300
TimeoutStopSec=120
Restart=on-failure
RestartSec=30

# Security settings (relaxed for rootless podman)
NoNewPrivileges=no
PrivateTmp=no
ProtectSystem=no
ProtectHome=no

# Environment - Minimal for wrapper script
Environment=PATH=/usr/local/bin:/usr/bin:/bin
Environment=HOME=/home/haint

# Logging
StandardOutput=journal
StandardError=journal
SyslogIdentifier=media-stack

[Install]
WantedBy=default.target

# ================================================================================================
# SYSTEMD SERVICE CONFIGURATION FOR MEDIA STACK
# ================================================================================================
#
# INSTALLATION INSTRUCTIONS:
# 
# 1. Copy this file to the systemd user directory:
#    mkdir -p ~/.config/systemd/user
#    cp media-stack.service ~/.config/systemd/user/
#
# 2. Enable linger for your user (allows services to run without login):
#    sudo loginctl enable-linger haint
#
# 3. Reload systemd and enable the service:
#    systemctl --user daemon-reload
#    systemctl --user enable media-stack.service
#    systemctl --user start media-stack.service
#
# USEFUL COMMANDS:
#
# Check service status:
#    systemctl --user status media-stack.service
#
# View logs:
#    journalctl --user -u media-stack.service -f
#
# Start/Stop/Restart:
#    systemctl --user start media-stack.service
#    systemctl --user stop media-stack.service
#    systemctl --user restart media-stack.service
#
# Enable/Disable auto-start:
#    systemctl --user enable media-stack.service
#    systemctl --user disable media-stack.service
#
# PODMAN COMMANDS (for direct container management):
#
# View pod status:
#    podman pod ps
#    podman pod stats pod_media-stack
#    podman pod logs --tail=10 -f pod_media-stack
#
# Individual container logs:
#    podman logs -f gluetun
#    podman logs -f qbittorrent
#    podman logs -f prowlarr
#
# ================================================================================================
